name: Actualiza datos INE y publica JSON en docs/data

on:
  schedule:
    - cron: "0 6 * * *"        # cada día 06:00 UTC
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # imprescindible para poder pushear

    steps:
      - name: Checkout (historial completo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0       # evita estados raros al commitear/pushear

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Instalar dependencias
        run: |
          pip install -r requirements.txt

      - name: Ejecutar actualización (descarga INE + limpieza)
        env:
          PYTHONPATH: ./scripts
        run: |
          set -e
          python scripts/update_data.py --excel "Datos Extremadura Mensual.xlsx"

      - name: Verificar JSON generados (debug)
        run: |
          echo "== Lista en data/processed =="
          ls -l data/processed || true
          COUNT=$(ls data/processed/*.json 2>/dev/null | wc -l | xargs)
          if [ -z "$COUNT" ] || [ "$COUNT" = "0" ]; then
            echo "::error::No se han generado JSON en data/processed"
            exit 1
          fi
          echo "OK: $COUNT JSON."

      - name: Copiar JSON a docs/data
        run: |
          set -e
          mkdir -p docs/data
          cp -f data/processed/*.json docs/data/
          echo "== Contenido de docs/data =="
          ls -l docs/data

      - name: Estado git antes de commit
        run: |
          echo "== git status (antes) ==" && git status --porcelain || true
          echo "== diff staged ==" && git diff --cached --name-only || true
          echo "== diff working ==" && git diff --name-only || true

      - name: Commit & push de JSON y web
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Añadir todo lo relevante
          git add docs/data data/processed docs/index.html docs/css docs/js

          # Si hay cambios, commit y push
          if git diff --cached --quiet; then
            echo "No hay cambios que commitear."
          else
            git commit -m "chore: publicar web en /docs y actualizar JSON"
            git push origin HEAD:main
          fi

      - name: Estado git después de commit
        run: |
          echo "== git status (después) ==" && git status --porcelain || true
